@model DataAccess.Models.CustOrder
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa-fw fa fa-truck"></i>
                Orders
                <span>
                    >
                    Subtitle
                </span>
            </h1>
        </div>
    </div>

    <section id="widget-grid" class="">
        <div class="well">

            <div class="row">
                <div class="col-md-8">
                    @if (Model.State == (int)OrderStates.Draft)
                    {
                        <button class="btn btn-success" id="btnSaveOrder">Save</button>
                        <button class="btn btn-danger" id="btnComplete">Complete</button>
                    }
                    else
                    {
                        <button class="btn btn-primary" id="btnCompare">Compare</button>
                    }
                    <button class="btn btn-default" id="btnReview">Review</button>
                </div>
                <div class="col-md-4 pull-right">
                    <div class="col-md-5">
                        @Html.DropDownList("EntityDDl",
                            ((IEnumerable<SelectListItem>)ViewBag.categoriesList).Where(x => x.Text.Equals("DekSmart") || x.Text.Equals("Century")),
                            "Select",
                                  new { @class = "input-lg" })
                    </div>
                    <div class="col-md-5 pull-right">
                        <h1 class="semi-bold ">Order: @ViewBag.OrderId</h1>
                    </div>
                </div>
            </div>

        </div>

        <!-- START ROW -->
        <div class="row">
            <article class="col-sm-12 col-md-9 col-lg-9">
                <!-- NEW COL START -->
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <!-- Customer Div-->
                    <div class="jarviswidget  jarviswidget-color-darken" id="wid-id-2" data-widget-colorbutton="false"
                         data-widget-editbutton="false"
                         data-widget-togglebutton="false"
                         data-widget-deletebutton="false"
                         data-widget-fullscreenbutton="false"
                         data-widget-custombutton="false"
                         data-widget-collapsed="false"
                         data-widget-sortable="false" role="widget">

                        <!-- widget div-->
                        <header role="heading">
                            <h2 class="font-md"><strong>Order</strong> <i>Details</i></h2>
                            <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                        </header>
                        <div role="content">
                            <div class="orderDetailPanel">
                                <!-- Customer Div-->
                                <div class="col-sm-12 col-md-6 col-lg-4 panel panel-default">
                                    <!-- widget content -->
                                    <div class="widget-body">
                                        <div id="checkout-form" class="form-horizontal bv-form" novalidate="novalidate">
                                            <fieldset>
                                                <legend>
                                                    Customer
                                                </legend>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4">Company</label>
                                                    <div class="col-md-8">
                                                        @Html.Label(Model.Customer.Company) &nbsp;<i class="fa fa-edit" title="edit"></i>

                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4" for="Customer">Customer</label>
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("CustomerID", new SelectList(ViewBag.EmployeeDropdown, "EmployeeId", "Name"), "Select", new { @class = "input-sm" })
                                                        <i class="fa fa-edit" title="edit"></i>
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4">Work Order No.</label>
                                                    <div class="col-md-8">
                                                        <input type="text" class="form-control" name="workOrderno" data-bv-field="workOrderno"><i class="form-control-feedback" data-bv-icon-for="email" style="display: none;"></i>
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4">Account No.</label>
                                                    <div class="col-md-8">

                                                        <input type="text" class="form-control" id="Condition">

                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                    <!-- end widget content -->
                                </div>
                                <!-- Shipping Div-->
                                <div class="col-sm-12 col-md-6 col-lg-4 panel panel-default">
                                    <!-- widget content -->
                                    <div class="widget-body">
                                        <div id="checkout-form" class="form-horizontal bv-form" novalidate="novalidate">
                                            <fieldset>
                                                <legend>
                                                    Shipping
                                                </legend>

                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4" for="Charge">Charge</label>
                                                    <div class="col-md-8">
                                                        <label class="select">
                                                            <select class="input-sm" id="Charge">
                                                                <option value="0">Choose name</option>
                                                                <option value="1">Alexandra</option>
                                                                <option value="2">Alice</option>
                                                                <option value="3">Anastasia</option>
                                                                <option value="4">Avelina</option>
                                                            </select> <i class="fa fa-edit" title="edit" data-toggle="modal" data-target="#shipping_edit_modal"></i>
                                                        </label>
                                                    </div>
                                                </div>

                                            </fieldset>

                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4" for="Carrier">Carrier</label>
                                                    <div class="col-md-8">
                                                        <label class="select">
                                                            @Html.DropDownList("PriorityID", (IEnumerable<SelectListItem>)ViewBag.dropdownVD, "Select", new { @class = "input-sm" })
                                                            <i class="fa fa-edit" title="edit"></i>
                                                        </label>
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <fieldset>
                                                <div class="form-group has-feedback">
                                                    <label class="col-md-4" for="Payment">Payment Condition</label>
                                                    <div class="col-md-8">
                                                        <label class="select">
                                                            <select class="input-sm" id="Payment">
                                                                <option value="0">Choose name</option>
                                                                <option value="1">Alexandra</option>
                                                                <option value="2">Alice</option>
                                                                <option value="3">Anastasia</option>
                                                                <option value="4">Avelina</option>
                                                            </select> <i class="fa fa-edit" title="edit"></i>
                                                        </label>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                                <!-- Drop Files Div-->
                                <div class="col-sm-12 col-md-6 col-lg-4 panel panel-default">
                                    <!-- widget content -->
                                    <div class="widget-body">
                                        <fieldset>
                                            <legend>
                                                Order Files
                                            </legend>

                                        </fieldset>

                                        <div class="custom-scroll dropFile">
                                            <form action="~/Order/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone dz-clickable" id="dropzoneFormOrder" style="min-height:inherit">

                                                <div class="dz-default dz-message">
                                                    <span>
                                                        <span class="text-center">
                                                            <span class="font-lg visible-xs-block visible-sm-block visible-lg-block">
                                                                <span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>
                                                                    &nbsp;&nbsp;
                                                                    <h4 class="display-inline"> (Or Click)</h4>
                                                                </span>
                                                            </span>
                                                        </span>
                                                    </span>
                                                </div>
                                                <input type="hidden" id="custOrderID" name="custOrderID" value="@ViewBag.OrderId" />
                                            </form>
                                        </div>
                                    </div>
                                    <!-- end widget content -->
                                </div>
                                <!-- Tags Div-->

                            </div>
                        </div>
                        <!-- end widget div -->
                    </div>

                </div>
                <!-- END COL -->
                <!-- NEW COL START -->
                <article class="col-sm-12 col-md-12 col-lg-12">
                    <div class="jarviswidget" id="PartsGrid" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" role="widget">

                        <header role="heading">


                            <ul id="widget-tab-1" class="nav  nav-tabs" name="CategoryType">

                                <li class="active" name="All" onclick="refreshPartsGrid(this);">

                                    <a data-toggle="tab" href="#AllParts" aria-expanded="true">  <span class="hidden-mobile hidden-tablet"> All </span> </a>

                                </li>

                                <li class="" name="Posts" onclick="refreshPartsGrid(this);">
                                    <a data-toggle="tab" href="#AllParts" aria-expanded="false"> <span class="hidden-mobile hidden-tablet"> Post </span></a>
                                </li>

                                <li class="" name="Pillars" onclick="refreshPartsGrid(this);">
                                    <a data-toggle="tab" href="#AllParts" aria-expanded="false">  <span class="hidden-mobile hidden-tablet"> Pillars </span></a>
                                </li>

                                <li class="" name="Parts" onclick="refreshPartsGrid(this);">
                                    <a data-toggle="tab" href="#AllParts" aria-expanded="false">  <span class="hidden-mobile hidden-tablet"> Parts </span></a>
                                </li>

                                <li class="" name="Recommended" onclick="refreshPartsGrid(this);">
                                    <a data-toggle="tab" href="#AllParts" aria-expanded="false">  <span class="hidden-mobile hidden-tablet"> Recommended </span></a>
                                </li>

                            </ul>

                            <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                        </header>

                        <!-- widget div-->
                        <div role="content">
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">
                                <!-- widget body text-->
                                <div class="tab-content padding-10">
                                    <div class="tab-pane fade active in" id="AllParts">
                                        <div class="padding-10">
                                            <div class="row">
                                                <label class="col-sm-6 col-md-6 col-lg-6  select">
                                                    @Html.DropDownList("Categoryddl", (IEnumerable<SelectListItem>)ViewBag.categoriesList, "Select", new { @class = "input-sm" })
                                                </label>
                                                <label class="col-sm-6 col-md-6 col-lg-6">

                                                    <input type="text" id="txt_productSearch" class="" style="width:100%" placeholder="Find by product ID or Description" aria-controls="PartsList">
                                                </label>

                                            </div>
                                            <div class="row">

                                                <table id="PartsList" class="table table-striped table-bordered table-hover"></table>

                                            </div>

                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="Post">
                                        <h2>pill</h2>
                                    </div>
                                    <div class="tab-pane fade" id="Pillars">
                                        <h2>Pillars</h2>
                                    </div>
                                    <div class="tab-pane fade" id="Parts">
                                        <h2>Parts</h2>
                                    </div>
                                    <div class="tab-pane fade" id="Recommended">
                                        <h2>Recommended</h2>
                                    </div>
                                </div>
                                <!-- end widget body text-->
                                <!-- widget footer -->
                                <!-- end widget footer -->
                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>

                </article>
                <!-- END COL -->
            </article>
            <article class="col-sm-12 col-md-3 col-lg-3" id="tagSection">
                <div class="jarviswidget jarviswidget-color-darken " id="wid-id-2" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" role="widget" style="">

                    <header role="heading">
                        <h2 class="font-md"><i>Tags</i></h2>
                        <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                    </header>

                    <!-- widget div-->
                    <div role="content">
                        <!-- widget content -->
                        <div class="widget-body">
                            <div id="checkout-form" class="form-horizontal bv-form" novalidate="novalidate">
                                <fieldset>
                                    <div class="form-group has-feedback">
                                        <div class="col-md-8">
                                            <input type="text" class="form-control" id="tag_name" placeholder="Create New Tag">
                                        </div>
                                        <div class="col-md-4">
                                            <input type="button" class="btn btn-primary" id="create_tag_btn" value="Create" />
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="panel panel-default tagPanelDetail custom-scroll" style="max-height: 800px; overflow-y: scroll;">
                                <!-- Here Tag divs will be added dynamically -->
                            </div>
                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
            </article>
        </div>
        <!-- END ROW -->
    </section>
    <!-- Modal -->
    <div class="modal fade" id="edit_prder_part_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Edit Order Part</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <form action="~/Order/SaveOrderPartFile" method="post" enctype="multipart/form-data" class="dropzone dz-clickable" id="orderPartFileForm" style="min-height:inherit">
                            <div class="form-group">
                                <label class="control-label col-sm-3">Comments:</label>
                                <div class="col-sm-7">
                                    @Html.TextArea("comment", null, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="custom-scroll dropFile">
                                <div class="dz-default dz-message">
                                    <span>
                                        <span class="text-center">
                                            <span class="font-lg visible-xs-block visible-sm-block visible-lg-block">
                                                <span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>
                                                    &nbsp;&nbsp;
                                                    <h4 class="display-inline"> (Or Click)</h4>
                                                </span>
                                            </span>
                                        </span>
                                    </span>
                                </div>
                                @Html.Hidden("orderPartId")
                            </div>
                        </form>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button class="btn  btn-success" id="save_order_part_edit_btn" data-dismiss="modal">Save</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Ends -->

    <!-- Confirmation Box For Deleting Tag Part -->
    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
                </div>

                <div class="modal-body">
                    <p>Are you want to delete?</p>
                    <p class="debug-url"></p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-danger btn-ok" id="deleteTagPartBtn" data-dismiss="modal">Delete</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Confirmation Box For Deleting Tag Part Ends -->
    <!-- Modal for Custom Port -->
    <div class="modal fade" id="customPortDiv" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Customer Carrier</h3>
                </div>
                <div class="modal-body">
                    <div class="widget-body no-padding">
                        <div id="new-customer-carrier-form" class="smart-form" novalidate="novalidate">
                            @*@Html.HiddenFor(model => model.PartId)*@

                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="select">
                                            <input type="text" value="" placeholder="Name" />
                                            @*@Html.TextBoxFor(model => model.PartNo, new { placeholder = Html.DisplayNameFor(n => n.PartNo) })
                                                @Html.ValidationMessageFor(model => model.PartNo, "", new { @class = "text-danger" })*@
                                            <i>
                                            </i>
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.TextBoxFor(model => model.Name, new { placeholder = Html.DisplayNameFor(n => n.Name) })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="textarea">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.TextAreaFor(model => model.Comment, new { placeholder = Html.DisplayNameFor(n => n.Comment) })
                                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.TextBoxFor(model => model.Weight, new { placeholder = Html.DisplayNameFor(n => n.Weight) })
                                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.DropDownListFor(model => model.WeightUnit, Enumerable.Empty<SelectListItem>(), "Select a Carrier", new { @id = "CarrierList" })
                                                @Html.ValidationMessageFor(model => model.WeightUnit, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.TextBoxFor(model => model.Quantity, new { placeholder = Html.DisplayNameFor(n => n.Quantity) })
                                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.DropDownListFor(model => model.QuantityUnit, Enumerable.Empty<SelectListItem>(), "Select a Carrier", new { @id = "CarrierList" })
                                                @Html.ValidationMessageFor(model => model.QuantityUnit, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.TextBoxFor(model => model.Price, new { placeholder = Html.DisplayNameFor(n => n.Price) })
                                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @*@Html.DropDownListFor(model => model.PriceUnit, Enumerable.Empty<SelectListItem>(), "Select a Carrier", new { @id = "CarrierList" })
                                                @Html.ValidationMessageFor(model => model.PriceUnit, "", new { @class = "text-danger" })*@
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input"></label>
                                        <div class="custom-scroll dropFile">
                                            @*<form action="upload.php" class="dropzone dz-clickable" id="mydropzone"><div class="dz-default dz-message"><span><span class="text-center"><span class="font-lg visible-xs-block visible-sm-block visible-lg-block"><span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>&nbsp;&nbsp;<h4 class="display-inline"> (Or Click)</h4></span></span></span></span></div></form>*@
                                            @*<form action="~/Order/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone dz-clickable" id="dropzoneForm" style="min-height:inherit">

                                                    <div class="dz-default dz-message">
                                                        <span>
                                                            <span class="text-center">
                                                                <span class="font-lg visible-xs-block visible-sm-block visible-lg-block">
                                                                    <span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>
                                                                        &nbsp;&nbsp;
                                                                        <h4 class="display-inline"> (Or Click)</h4>
                                                                    </span>
                                                                </span>
                                                            </span>
                                                        </span>
                                                    </div>
                                                </form>*@
                                        </div>
                                    </section>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="newShippingAddressSubmit">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal for Custom Port Ends -->
    <input type="hidden" id="hdnOrderPartIDs" value="@ViewBag.OrderPartIDs " />
    <input type="hidden" id="hdnCategory" value="All" />
</div>
<!-- END MAIN CONTENT -->
<style>
    .orderDetailPanel {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }

        .orderDetailPanel > div {
            margin: 0px 5px 15px 0px;
        }

        .orderDetailPanel .dropFile {
            overflow-y: scroll;
            max-height: 200px;
        }

    .tagDropDown {
        max-width: inherit;
        padding: 2px;
        color: #000;
    }

    .tagPanel {
        padding: 5px;
        border-radius: 5px;
    }

    #tagSection .active table thead {
        color: #000;
    }

    #tagSection .active {
        border-radius: 5px;
        border-color: #3276b1;
        color: #fff;
        background-color: #337ab7;
    }
    /* #tagSection .active label{
       color: #fff;
    }
        #tagSection .active table tbody {

            background-color: #fff;
        }*/
    .tagLabel {
        padding: 0px 10px;
    }
</style>
@section pagespecific {

    <script>

        OrderJs.getTagsForCurrentCustomerOrder();

        $('#orderPartFileForm').on('submit', function() {
            var id = $('#edit_prder_part_modal').data('orderpartid');
            $('#orderPartId').val(id);
        });

        var drop = $("#orderPartFileForm").dropzone({
            maxFiles: 1,
            maxFilesize: 2,
            //prevents Dropzone from uploading dropped files immediately
            autoProcessQueue: false,
            addRemoveLinks: true,
            init: function() {
                var submitButton = document.querySelector("#save_order_part_edit_btn");
                var myDropzone = this; //closure

                submitButton.addEventListener("click", function() {
                    myDropzone.processQueue(); //tell Dropzone to process all queued files
                });
            }
        });


    </script>
    <script>
        function editPart(id) {
            $('#edit_prder_part_modal').attr('data-orderPartId', id);
            $('#orderPartId').val(id);
            $('#edit_prder_part_modal').modal('show');
        }

        function addPart(id) {
            OrderJs.addPartToTag(id);
        }

        function customPart() { }
    </script>

    <script>
        var responsiveHelper_datatable_tabletools = undefined;
        var responsiveHelper = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        var clientTable = $('#PartsList').DataTable({
            serverSide: true,
            "ajax": {
                "url": appRoot + "order/GetOrderParts",
                "type": 'GET',
                "data": function (d) {
                    d.OrderPartsIds = $('#hdnOrderPartIDs').val();
                    d.custOrderID = $('#custOrderID').val();
                    d.Category = $('#hdnCategory').val();


                },
                "dataSrc": function (json) {
                    // manipulate your data (json)
                    // console.log(json)
                    return json.data;
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                var index =  ( (iDisplayIndex + 1));
                $('td:eq(0)', nRow).html(index);
            },
            "bInfo": false, //Dont display info e.g. "Showing 1 to 4 of 4 entries"
            "searching": false, //Disable searching abilities in DataTables:
            "bPaginate": false,//Dont want paging
            "columnDefs": [{
                "searchable": false,
                "orderable": false,
                "targets": 0
            }],
            "processing": true,
            "order": [[1, 'asc']],
            columns: [
                {
                    name: 'custOrderPartId',
                    data: "custOrderPartId",
                    title: "#",
                    sortable: false,
                    searchable: false
                },
                {
                    name: 'category',
                    data: "category",
                    title: "Category",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'partID',
                    data: "partID",
                    title: "PartIDs",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'image',
                    data: "image",
                    title: "Image",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'number',
                    data: "number",
                    title: "No.",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'description',
                    data: "description",
                    title: "Description",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'price',
                    data: "price",
                    title: "Price",
                    sortable: true,
                    searchable: true,
                    render: $.fn.dataTable.render.number(',', '.', 0, '$')


                },
                {
                    name: 'comments',
                    data: "comments",
                    title: "Comment",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'quantity',
                    data: "quantity",
                    title: "Qty",

                    width: "60px",
                    sortable: false,
                    searchable: false,
                    render: function (data, type, row) {
                        if (type === 'display') {
                            data = parseFloat(data).toFixed(2);
                            return '<input type="number" onblur="updateQunatity(this);"  onchange="this.value = parseFloat(this.value).toFixed(2)" '+
                            'pattern = "^\d+(?:\.\d{1,2})?$"  min= "0" step= ".01" style= "width:100%" '+
                            'name = "' + row.custOrderPartId + '" value= "' + data + '"  />';
                        }
                        return data;
                    }
                },
                {
                    name: 'meaUnit',
                    data: "meaUnit.shortDescription",
                    title: "Mea Unit",
                    width: "60px",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'weight',
                    data: "weight",
                    title: "Weight",
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'partID',
                    data: "partID",
                    title: "Action",
                    sortable: false,
                    searchable: false,
                    width: "150px",
                    render: function (data, type, row) {
                        if (type === 'display') {

                            return '<a href="javascript:void(0);" class="btn btn-info btn-xs" title=" Edit" onclick="editPart(' + data + ');"> Edit </a> &nbsp;&nbsp;' +
                                //'<a href="javascript:void(0);" class="btn btn-info btn-xs" title=" Add" onclick="addPartToTag(' + data + ');"> Add </a>&nbsp; &nbsp;' +
                                '<a href="javascript:void(0);" class="btn btn-info btn-xs" title=" Add" onclick="addPart(' + data + ');"> Add </a>&nbsp; &nbsp;' +
                                '<a href="javascript:void(0);" class="btn btn-info btn-xs" title=" Custom" onclick="customPart(' + data + ');"> Custom </a>';
                        }
                        return data;
                    }
                },
                {
                    name: 'files',
                    data: "files[0].name",
                    title: "File",
                    sortable: false,
                    searchable: false,
                    render: function (data, type, row) {
                        if (type === 'display') {
                            if (data !== "") {
                                return '<a href="javascript:void(0);"> ' + data + ' </a>';
                            }
                        }
                        return data;
                    }
                }
            ],
            "scrollX": true,
            "oLanguage": {
                "sSearch": ""
            },
            initComplete: function () {

            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper) {
                    responsiveHelper = new ResponsiveDatatablesHelper($('#PartsList'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper.respond();
            }
        });
        //clientTable.on('order.dt search.dt', function () {
        //    clientTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
        //        cell.innerHTML = i + 1;
        //    });
        //}).draw();



        var attendeeUrl = '@Url.Action("GetItems", "Order")';
        var pageSize = 20;

        var select2Instance = $("#txt_productSearch").select2({
            ajax: {
                url: attendeeUrl,
                dataType: 'json',
                delay: 250,
                data: function (term, page) {
                    page = page > 1 ? page : 0;
                    var cat = $('#Categoryddl').val();
                    var subCategory = cat ? cat : 0;
                    var Category = $('[name=CategoryType] li.active').attr('name');
                    return {
                        pageSize: pageSize,
                        pageNum: page,
                        searchTerm: term,
                        Category: Category,
                        subCategory: subCategory
                    };
                },

                results: function (data, page) {
                    //Used to determine whether or not there are more results available,
                    //and if requests for more data should be sent in the infinite scrolling
                    var more = (page * pageSize) < data.Total;
                    return { results: data.Results, more: more };
                },
                cache: true
            },
            dropdownParent: jQuery('div#txt_productSearch'),
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            allowClear: true

            ////  templateResult: formatRepo, // omitted for brevity, see the source of this page
            //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
        });

        select2Instance.on('results:message', function (params) {
            this.dropdown._resizeDropdown();
            this.dropdown._positionDropdown();
        });

        $("#txt_productSearch").on("change", function (event) {

            // getting selected value
            var last = $("#txt_productSearch").select2('data');
            // adding the data in the grid
            addPartItem(last.id);

            $("#txt_productSearch").select2("val", "");
        });

        $("#EntityDDl").on("change", function (event) {

            // getting selected value
            refreshPartsGrid();
        });

        function updateQunatity(obj) {
            var orderPartId = obj.name;
            var attendeeUrl = '@Url.Action("UpdateQuantityOrderPart", "Order")';
            $.ajax({
                dataType: "json",
                type: "POST",
                async: false,
                url: attendeeUrl,
                data: {
                    'orderPartId': orderPartId,
                    'quantity': obj.value
                },
                success: function (response) {

                    console.log(response);

                }
            });
        }

        function refreshPartsGrid(obj) {
            var attendeeUrl = '@Url.Action("GetCategories", "Order")';
            var CategoryParentID = (obj) ? $(obj).attr('name') : $('[name=CategoryType] li.active').attr('name');

            if (!($(obj).hasClass('active'))) {

                 $.ajax({
                    dataType: "json",
                    type: "GET",
                    async: false,
                    url: attendeeUrl,
                    data: {
                        'CategoryParentID': CategoryParentID,
                        'EntityId':$("#EntityDDl").val()
                    },
                    success: function (response) {

                        var select = $("#Categoryddl");
                        select.children().remove();
                        if (response.Data) {
                            select.append($("<option>").val("").text("select"));
                            $(response.Data).each(function (index, item) {
                                select.append($("<option>").val(item.Value).text(item.Text));
                            });
                        }

                    }
                });
                 $('#hdnCategory').val(CategoryParentID);
                 clientTable.ajax.reload();
            }
        }

        function addPartItem(itemId) {
            $.ajax({
                dataType: "json",
                type: "POST",
                async: false,
                url: appRoot + "order/AttachPartWithOrder",
                data: {
                    'PartsId': itemId,
                    'custOrderID': $('#custOrderID').val()
                },
                success: function (response) {
                    if (response && response.status) {
                        var partsId = $('#hdnOrderPartIDs').val();
                        if (partsId) {
                            if (partsId.indexOf(response.OrderPartId) == -1) {
                                partsId += "," + response.OrderPartId;
                            }
                        } else {
                            partsId = response.OrderPartId;
                        }
                        $('#hdnOrderPartIDs').val(partsId);
                        clientTable.ajax.reload();
                    } else {

                        toastr.warning("This product already exists in this order");
                    }

                }
            });

        }

    </script>

    <script type="text/javascript">

        var dash = $("#dropzoneFormOrder").dropzone({
            //url: "/file/post",
            addRemoveLinks: true,
            maxFilesize: 0.5,
            dictDefaultMessage: '<span class="text-center"><span class="font-lg visible-xs-block visible-sm-block visible-lg-block"><span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>&nbsp&nbsp<h4 class="display-inline"> (Or Click)</h4></span>',
            dictResponseError: 'Error uploading file!',
            init: function () {
                this.on("complete", function (data) {
                    //var res = eval('(' + data.xhr.responseText + ')');
                    if (data.status != "error") {
                        var res = JSON.parse(data.xhr.responseText);
                    }

                });
                var thisDropzone = this;
                var custOrderID = $('#custOrderID').val();
                //Call the action method to load the images from the server
                $.getJSON("/order/GetAttachments/" + custOrderID).done(function (data) {
                    if (data.Data != '') {

                        $.each(data.Data, function (index, item) {
                            //// Create the mock file:
                            var mockFile = {
                                name: item.FileName,
                                size: item.size
                            };

                            // Call the default addedfile event handler
                            thisDropzone.emit("addedfile", mockFile);

                            // And optionally show the thumbnail of the file:
                            thisDropzone.emit("thumbnail", mockFile, item.Path);

                            // If you use the maxFiles option, make sure you adjust it to the
                            // correct amount:
                            //var existingFileCount = 1; // The number of files already uploaded
                            //myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;
                        });
                    }

                });
            },
            accept: function (file, done) {
                if (this.files.length) {
                    var fileExists = false;
                    var i, len, pre;
                    for (i = 0, len = this.files.length; i < len - 1; i++) {
                        if (this.files[i].name == file.name) {
                            fileExists = true;
                            var error_msg = "Error! The File is already in Queue";
                            done(error_msg);
                            toastr.error(error_msg);
                            return (pre = file.previewElement) != null ? pre.parentNode.removeChild(file.previewElement) : void 0;
                        }
                    }

                    var filename = file.name.replace(/\.[^.]+$/, '')
                    if (fileExists) {
                        var error_msg = "Error! The File is already in Queue";
                        done(error_msg);
                        this.removeFile(file);
                        toastr.error(error_msg);
                    }
                    else {
                        done();
                    }
                }
            },
            removedfile: function (file) {
                var name = file.name;
                $.ajax({
                    type: 'POST',
                    url: "/order/RemoveAttachments",
                    data: { 'custOrderID': $('#custOrderID').val(), "fileName": name },
                });
                var _ref;
                return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
            }

        });
        //File Upload response from the server
        Dropzone.autoDiscover = false;

    </script>

    <script>

        $('#btnSaveOrder').on('click', function () {
            UpdateOrderState('Draft');
        });

        $('#btnComplete').on('click', function () {
            UpdateOrderState('Primary');
        });

        $('#btnCompare').on('click', function () {
            UpdateOrderState('Secondary');
        });

        $('#btnReview').on('click', function () {
            UpdateOrderState('Review');
        });

        function UpdateOrderState(State) {
            $.ajax({
                dataType: "json",
                url: "/Order/UpdateOrderState",
                async: false,
                type: "POST",
                data: { 'custOrderID': $('#custOrderID').val(), "State": State },
                success: function (data) {
                    if (State == 'Draft') {
                        window.location.href = "/Dashboard/Index";
                    } else if (State == 'Primary') {
                        window.location.href = "/Dashboard/Index";
                    } else if (State == 'Secondary') {
                        //window.location.href = "/Order/CompareOrder?custOrderId=" + $('#custOrderID').val();
                        window.location.href = "/Order/CompareOrder/" + $('#custOrderID').val();
                    } else if (State == 'Review') {
                        //window.location.href = "/Order/OrderReview?custOrderId=" + $('#custOrderID').val();
                        window.location.href = "/Order/OrderReview/" + $('#custOrderID').val();
                    }
                },
                failure: function (data) {

                }
            });
        }

        function removePartFrmTag(cntrl) {
            var custOrderId = $('#custOrderID').val();
            var parentTr = $(cntrl).parent().parent();
            $(parentTr).attr('data-custorderid', custOrderId);
            $(parentTr).attr('data-tobedeleted', "true");
            $(parentTr).addClass('toBeDeleted');
            $('#confirm-delete').modal('show');
        }

    </script>
}
