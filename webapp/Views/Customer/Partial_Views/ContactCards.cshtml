@model IEnumerable<DataAccess.Models.CustomerContact>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@

@foreach (var contact in Model)
{
    var cardId = "card" + contact.CustomerContactID;
    <div id="@cardId" data-id="@contact.CustomerContactID" class="card">
        <div class="deleteContact"><i class="fa fa-fw fa-lg fa-times-circle deleteContactIcon" title="Delete Contact" onclick="CustomerContactDeleteClick('@contact.CustomerContactID', '@contact.First', '@contact.Last')"></i></div>
        <h4><strong>@Html.DisplayFor(x => contact.Last), @Html.DisplayFor(x => contact.First)</strong></h4>
        @if (contact.JobTitle != null)
        {
            <p><strong>Title</strong>: @Html.DisplayFor(x => contact.JobTitle)</p>
        }
        @foreach (var contactInfo in contact.ContactInfos)
        {
            if (contactInfo.ContactInfoType.Name == "Phone" && contactInfo.PrimaryContact)
            {
                <p><span class="contactInfo"><i class="fa fa-fw fa-lg fa-phone-square" title="Phone"></i> 
                <strong>@Html.DisplayFor(x => contactInfo.Name)</strong>: @Html.DisplayFor(x => contactInfo.Contact) 
                <i class="fa fa-fw fa-lg fa-check greenIcon" title="Primary Contact"></i> </span>
                <i class="fa fa-fw fa-lg fa-minus-circle" title="Remove @Html.DisplayFor(x => contactInfo.Contact)"></i></p>
            }
            else if (contactInfo.ContactInfoType.Name == "Phone")
            {
                <p><span class="contactInfo"><i class="fa fa-fw fa-lg fa-phone-square" title="Phone"></i> 
                <strong>@Html.DisplayFor(x => contactInfo.Name)</strong>: @Html.DisplayFor(x => contactInfo.Contact) </span>
                <i class="fa fa-fw fa-lg fa-minus-circle" title="Remove @Html.DisplayFor(x => contactInfo.Contact)"></i></p>
            }
            else if (contactInfo.ContactInfoType.Name == "Email" && contactInfo.PrimaryContact)
            {
                <p><span class="contactInfo"><i class="fa fa-fw fa-lg fa-envelope" title="Email"></i> 
                <strong>@Html.DisplayFor(x => contactInfo.Name)</strong>: @Html.DisplayFor(x => contactInfo.Contact) 
                <i class="fa fa-fw fa-lg fa-check greenIcon" title="Primary Contact"></i> </span>
                <i class="fa fa-fw fa-lg fa-minus-circle" title="Remove @Html.DisplayFor(x => contactInfo.Contact)"></i></p>
            }
            else  // (contactInfo.ContactInfoType.Name == "Email")
            {
                <p><span class="contactInfo"><i class="fa fa-fw fa-lg fa-envelope" title="Email"></i>
                <strong>@Html.DisplayFor(x => contactInfo.Name)</strong>: @Html.DisplayFor(x => contactInfo.Contact) </span>
                <i class="fa fa-fw fa-lg fa-minus-circle" title="Remove @Html.DisplayFor(x => contactInfo.Contact)"></i></p>
            }
        }
        <p><i class="fa fa-fw fa-lg fa-plus-circle addInfo" title="Add new contact info"></i></p>
        @if (contact.Notes != null)
        {
            <p><strong>Notes</strong>: @Html.DisplayFor(x => contact.Notes)</p>
        }
    </div> 
}
<div id="deleteContactConfirm" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 id="deleteContactConfirmTitle" class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body">
                <p id="deleteContactConfirmMessage"><i class="fa fa-fw fa-lg fa-exclamation-triangle redIcon"></i>This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button id="deleteContactConfirmYes" type="button" class="btn btn-primary">Yes</button>
                <button id="deleteContactConfirmNo" type="button" class="btn btn-default">No</button>
            </div>
        </div>
    </div>
</div>