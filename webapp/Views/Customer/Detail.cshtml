@model DataAccess.Models.Customer
@Scripts.Render("~/Scripts/libs/jquery-2.1.1.min.js")

<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa-fw fa  fa-address-card"></i>
                @Model.Company
            </h1>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">


            <div class="jarviswidget well" id="wid-id-3" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false" role="widget">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <!-- widget div-->
                <div role="content">

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">



                        <ul id="Tab1" class="nav nav-tabs bordered">
                            <li class="active">
                                <a href="#s1" data-toggle="tab" aria-expanded="false"><i class="fa fa-fw fa-lg fa-address-card"></i> Company Details</a>
                            </li>
                            <li>
                                <a href="#s2" data-toggle="tab" aria-expanded="false"><i class="fa fa-fw fa-lg fa-users"></i> Contacts</a>
                            </li>
                            <li>
                                <a href="#s3" data-toggle="tab" aria-expanded="true"><i class="fa fa-fw fa-lg fa-truck"></i> Orders</a>
                            </li>
                            <li>
                                <a href="#s4" data-toggle="tab" aria-expanded="true"><i class="fa fa-fw fa-lg fa-quote-left"></i> Quotes</a>
                            </li>
                            <li>
                                <a href="#s5" data-toggle="tab" aria-expanded="true"><i class="fa fa-fw fa-lg fa-plane"></i> Shipping Address</a>
                            </li>
                            <li>
                                <a href="#s6" data-toggle="tab" aria-expanded="true"><i class="fa fa-fw fa-lg fa-plane"></i> Carriers</a>
                            </li>
                        </ul>

                        <div id="myTabContent1" class="tab-content padding-10">
                            <div class="tab-pane fade in active" id="s1">
                                <div class="padding-10">
                                    <h1><strong>@Html.ValidationMessage("Error", new { @class = "text-danger" })</strong></h1>
                                    <div class="row">
                                        @Html.Partial("Partial_Views/UpdateCompanyDetails", Model)
                                    </div>
                                </div>

                            </div>
                            <!-- BEGIN CONTACTS HTML -->
                            <div class="tab-pane fade" id="s2">
                                <div class="row">
                                    <div class="col-sm-12 text-align-left">
                                        <div class="btn-group">
                                            <button class="btn btn-sm btn-success" id="newContactButton"> <i class="fa fa-plus"></i> New Contact </button>
                                        </div>
                                        <div id="contactCards" class="padding-10">
                                            @Html.Action("GetCustomerContacts", "Customer", new { customerId = @Model.CustomerID })
                                        </div>
                                        <div class="padding-10">
                                            <table id="Contacts" class="table table-striped table-bordered table-hover"></table>
                                        </div>
                                        <!-- BEGIN ADD NEW CONTACT MODAL -->
                                        <div class="modal fade" id="contactModal" tabindex="-1" role="dialog" aria-labelledby="contactModal">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                        <h4 class="modal-title" id="myModalLabel">Add New Customer Contact</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        @Html.Partial("Partial_Views/NewContact", new DataAccess.Models.CustomerContact())
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- END ADD NEW CONTACT MODAL -->
                                        <!-- BEGIN ADD NEW CONTACT INFO MODAL -->
                                        <div class="modal fade" id="contactInfoModal" tabindex="-1" role="dialog" aria-labelledby="contactInfoModal">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                        <h4 class="modal-title" id="myModalLabel">Add New Customer Contact Information</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        @Html.Partial("Partial_Views/NewContactInfo", new DataAccess.Models.ContactInfo())
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- END ADD NEW CONTACT INFO MODAL -->
                                        <!-- BEGIN CONTACT CONFIRM DELETE MODAL -->
                                        <div id="deleteContactConfirm" class="modal fade">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                        <h4 id="deleteContactConfirmTitle" class="modal-title">Confirmation</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p id="deleteContactConfirmMessage"><i class="fa fa-fw fa-lg fa-exclamation-triangle redIcon"></i>This action cannot be undone.</p>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button id="deleteContactConfirmYes" type="button" class="btn btn-primary">Yes</button>
                                                        <button id="deleteContactConfirmNo" type="button" class="btn btn-default">No</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- END CONTACT CONFIRM DELETE MODAL -->
                                        <!-- BEGIN CONTACT MESSAGE MODAL -->
                                        <div id="contactMessageDialog" class="modal fade">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                        <h4 id="contactMessageDialogTitle" class="modal-title">Message</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p><i class="fa fa-fw fa-lg fa-exclamation-triangle redIcon"></i><span id="contactMessageDialogMessage"></span></p>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button id="contactMessageDialogOk" type="button" class="btn btn-primary">OK</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- END CONTACT MESSAGE MODAL -->
                                    </div>
                                </div>
                            </div>
                            <!-- END CONTACTS HTML -->
                            <div class="tab-pane fade" id="s3">
                                <div class="row">
                                    <div class="col-sm-12 text-align-left">
                                        <div class="btn-group">
                                            <a href="@Url.Action("New", "Order")" class="btn btn-sm btn-success"> <i class="fa fa-plus"></i> New Order </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="padding-10">
                                    <table id="Orders"></table>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="s4">
                                <div class="row">
                                    <div class="col-sm-12 text-align-left">
                                        <div class="btn-group">
                                            <a href="@Url.Action("New", "Order")" class="btn btn-sm btn-success"> <i class="fa fa-plus"></i> New Quote </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="padding-10">
                                    <table id="Quotes"></table>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="s5">
                                <div class="row">
                                    <div class="col-sm-12 text-align-left">


                                        <!-- Modal -->
                                        <div class="modal fade" id="newShippingAddress" tabindex="-1" role="dialog" aria-labelledby="newShippingAddress">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                        <h4 class="modal-title" id="myModalLabel">Add New Shipping Address</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        @Html.Partial("Partial_Views/NewShippingAddress", new DataAccess.Models.ShippingAddress { CustomerID = Model.CustomerID })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End Modal-->
                                    </div>
                                </div>
                                <div class="padding-10">
                                    <table id="Shipping" class="table table-striped table-bordered table-hover"></table>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="s6">
                                <div class="row">


                                        <!-- Modal -->
                                        <div class="modal fade" id="newCarrier" tabindex="-1" role="dialog" aria-labelledby="newCarrier">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                        <h4 class="modal-title" id="myModalLabel">Add Carrier</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        @Html.Partial("Partial_Views/NewCarrier", new DataAccess.Models.CustomerCarrier { CustomerID = Model.CustomerID })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End Modal -->
                                    </div>

                                    <div class="padding-10">
                                        <table id="Carriers" class="table table-striped table-bordered table-hover"></table>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
        </div>
    </div>

<!-- END MAIN CONTENT -->

@section pagespecific {


    <script>
        $(document).ready(function() {

            var responsiveHelper_Shipping = undefined;
            var responsiveHelper_Carriers = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var shippingDT = $('#Shipping').DataTable({

                serverSide: true,
                ajax: {
                    url: appRoot + "customer/GetShippingAddress",
                    data: function (d) {
                        return $.extend({}, d, {
                            customerId: "@Model.CustomerID"
                        });
                    }
                },

                columns: [
                    {
                        name: 'shippingAddressID',
                        data: 'shippingAddressID',
                        title: "shippingAddressID",
                        sortable: false,
                        searchable: false,
                        visible: false
                    }, {
                        name: 'address1',
                        data: "address1",
                        title: "Address 1",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'address2',
                        data: "address2",
                        title: "Address 2",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'city',
                        data: "city",
                        title: "city",
                        sortable: true,
                        searchable: true
                    } ,
                    {
                        name: 'province',
                        data: "province",
                        title: "Province",
                        sortable: true,
                        searchable: true
                    }

                ],
                dom: "<'dt-toolbar'<'col-xs-12 col-sm-6 col-md-3 col-lg-2'B><'col-xs-12 col-sm-6 col-md-6 col-lg-8'f><'hidden-sm hidden-xs col-md-3 col-lg-2'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                buttons: [
                   {
                       className: "new-shipping-address",
                       text: ''
                   }

                ],
                initComplete: function() {
                    $('.new-shipping-address').parent().html('<button class="btn btn-sm btn-success" data-toggle="modal" data-target="#newShippingAddress"> <i class="fa fa-plus"></i> New Shipping Address </button>')
                },
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_Shipping) {
                        responsiveHelper_Shipping = new ResponsiveDatatablesHelper($('#Shipping'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_Shipping.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_Shipping.respond();
                }
            });

            var carriersDT = $('#Carriers').DataTable({

                serverSide: true,
                ajax: {
                    url: appRoot + "customer/GetCustomerCarriers",
                    data: function (d) {
                        return $.extend({}, d, {
                            customerId: "@Model.CustomerID"
                        });
                    }
                },

                columns: [
                    {
                        name: 'customerCarrierID',
                        data: 'customerCarrierID',
                        title: "Customer Carrier ID",
                        sortable: false,
                        searchable: false,
                        visible: false
                    },
                    {
                        name: 'carrierID',
                        data: "carrierID",
                        title: "Carrier ID",
                        sortable: false,
                        searchable: false,
                        visible: false
                    },
                    {
                        name: 'carrierName',
                        data: "carrierName",
                        title: "Carrier Name",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'account',
                        data: "account",
                        title: "Account",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'customerCarrierComments',
                        data: "customerCarrierComments",
                        title: "Comments",
                        sortable: true,
                        searchable: true
                    }

                ],
                dom: "<'dt-toolbar'<'col-xs-12 col-sm-6 col-md-3 col-lg-2'B><'col-xs-12 col-sm-6 col-md-6 col-lg-8'f><'hidden-sm hidden-xs col-md-3 col-lg-2'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                buttons: [
                   {
                       className: "new-carrier",
                       text: ''
                   }

                ],
                initComplete: function() {
                    $('.new-carrier').parent().html('<button class="btn btn-sm btn-success" data-toggle="modal" data-target="#newCarrier"> <i class="fa fa-plus"></i> New Carrier </button>')
                },
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_Carriers) {
                        responsiveHelper_Carriers = new ResponsiveDatatablesHelper($('#Carriers'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_Carriers.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_Carriers.respond();
                }
            });

            $('#newShipAddressForm').on('shown.bs.modal', function() {
                $.validator.unobtrusive.parse('#newShipAddressForm')
            });

            $('#newShipAddressForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    type: "POST",
                    url: appRoot + "customer/NewShippingAddress",
                    data: form.serialize(),
                })
                .done(function() {
                    $('#newShippingAddress').modal('hide');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    //append error message
                    console.log(textStatus);
                });
                return false;
            });

            $('#updateCompanyDetailsForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                if (form.valid()) {
                    $.ajax({
                        type: "POST",
                        url: appRoot + "customer/UpdateCompanyDetails",
                        data: form.serialize(),
                    })
                    .done(function (data) {
                        //append success message
                        if (data.success) {
                            console.log("Saved");
                        }
                        else {
                            $('#UpdateCompanyError').text(data.responseText);
                        }

                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        //append error message
                        console.log("Save failed" + textStatus);
                        $('#UpdateCompanyError').text("Save Failed");
                    });
                }
                return false;
            });

            $('#newCustomerCarrierButton').on('click', function() {
                $('#newCarrier').modal();
            });


            $('#newCarrier').on('shown.bs.modal', function() {
                $.validator.unobtrusive.parse('#newCustomerCarrierForm');
                var url = '@Url.Action("PopulateCarrierDropdown", "Customer")';
                var carriers = $('#CarrierList');
                $.getJSON(url, function (response) {
                    carriers.empty();
                    $.each(response, function(index, item) {
                        carriers.append($('<option></option>').text(item.Text).val(item.ID));
                    })
                })
            });

            $('#newCarrier').on('submit', '#newCustomerCarrierForm', function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    type: "POST",
                    url: appRoot + "customer/NewCustomerCarrier",
                    data: form.serialize(),
                })
                .success(function() {
                    $('#newCarrier').modal('hide');
                    $('#Carriers').DataTable().ajax.reload();
                });
            });
        });

        // *** BEGIN CUSTOMER CONTACTS ***

        $(document).ready(function() {

            $('#contactModal').on('shown.bs.modal', function() {
                $.validator.unobtrusive.parse('#contactForm');
                var modal = $(this);
                modal.find('#CustomerID').val(@Model.CustomerID);
            });

            $('#contactModal').on('hidden.bs.modal', function() {
                // Clear values on hide.
                var modal = $(this);
                modal.find('#First').val('');
                modal.find('#Last').val('');
                modal.find('#JobTitle').val('');
                modal.find('#Notes').val('');
            });

            $('#newContactButton').on('click', function() {
                var modal = $('#contactModal');
                modal.modal();
            });

            $('#contactModal').on('submit', '#contactForm', function (e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    type: "POST",
                    url: appRoot + "customer/AddCustomerContact",
                    data: form.serialize(),
                })
                .success(function () {
                    $('#contactModal').modal('hide');
                    ReloadContactCards();
                });
            });

            $('#contactInfoModal').on('shown.bs.modal', function() {
                $.validator.unobtrusive.parse('#contactInfoForm');
                var modal = $(this);
            });

            $('#contactInfoModal').on('hidden.bs.modal', function() {
                // Clear values on hide.
                var modal = $(this);
                modal.find("#Name").val("");
                modal.find("#Contact").val("");
                modal.find("#typeEmail").removeAttr("checked");
                modal.find("#typePhone").removeAttr("checked");
                modal.find("#typePhone").prop("checked", true);
            });

            $('#contactInfoModal').on('submit', '#contactInfoForm', function (e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    type: "POST",
                    url: appRoot + "customer/AddContactInfo",
                    data: form.serialize(),
                })
                .success(function () {
                    $('#contactInfoModal').modal('hide');
                    ReloadContactCards();
                });
            });
        });

        // *** END JQUERY DOCUMENT READY SECTION ***

        function ReloadContactCards() {
            $("#contactCards").load('@Url.Action("GetCustomerContacts", "Customer", new { customerId = @Model.CustomerID })');
        }

        function CustomerContactDeleteClick(contactId, first, last) {

            var name;

            if (first && last) {
                name = first + " " + last;
            }
            else if (first) {
                name = first;
            }
            else {
                name = last;
            }

            $("#deleteContactConfirmTitle").html("Really delete <strong>" + name + "</strong>?");

            $("#deleteContactConfirmYes").off('click').click(function() {
                DeleteCustomerContact(contactId);
            });

            $("#deleteContactConfirmNo").off('click').click(function() {
                $("#deleteContactConfirm").modal("hide");
            });

            $("#deleteContactConfirm").modal("show");
        }

        function DeleteCustomerContact(contactId) {

            $.ajax({
                type: "POST",
                url: appRoot + "customer/DeleteCustomerContact",
                data: { "CustomerContactId": contactId },
            })
            .success(function() {
                ReloadContactCards();
                $("#deleteContactConfirm").modal("hide");
            });
        }

        function ContactEditSpanClicked() {

            var id = $(this).attr("data-id");
            var prev = $(this).attr("data-prev");
            var field = $(this).attr("data-field");
            var rows = field == "Notes" ? "3" : "1";
            var maxLength = field == "Notes" ? "125" : "50";

            var edit = $("<textarea rows='" + rows + "' maxlength='" + maxLength + "' data-id='" + id + "' data-field='" + field + "' data-prev='" + prev + "' class='spanEdit'/>");
            edit.val(prev);

            // keypress doesn't handle the ESC key, but using keyup means we need to strip trailing newline characters added by the enter key press.
            edit.keyup(function (e) {
                if (e.keyCode == 13) {
                    $(this).blur();
                }
                else if (e.keyCode == 27) {
                    ContactEditEsc($(this));
                }
            });

            $(this).replaceWith(edit);
            edit.focus();
            edit.blur(ContactEditSpanBlur);
        }

        function ContactEditSpanBlur() {

            var id = $(this).attr("data-id");
            var prev = $(this).attr("data-prev");
            var field = $(this).attr("data-field");
            var value = $(this).val().replace(/\n$/, "").trim();  // Strip any trailing newline character.

            var validation = ContactEditValidationFailed(field, value);
            if (validation) {
                value = prev;  // Failed validation. Restore to previous value.
                ContactMessageDialog(validation);
            }

            var display = value == "" ? ContactEditPlaceholder(field)  : value;
            var view = $("<span data-id='" + id + "' data-field='" + field + "' data-prev='" + value + "'>");
            view.html(display);
            $(this).replaceWith(view);
            view.click(ContactEditSpanClicked);

            if (value == prev) {
                return;  // No need to update the database if the value hasn't changed.
            }
            else if (field == "First" || field == "Last" || field == "JobTitle" || field == "Notes") {
                UpdateCustomerContactField(id, field, value);
            }
            else if (field == "Name" || field == "Contact") {
                UpdateContactInfoField(id, field, value);
            }
        }

        function ContactEditValidationFailed(field, value) {

            if (field == "First" && value == "") {
                return "First name cannot be blank!"
            }
            else if (field == "Last" && value == "") {
                return "Last name cannot be blank!"
            }
            else if (field == "Name" && value == "") {  // Name aka label
                return "Contact label cannot be blank!"
            }
            else if (field == "Contact" && value == "") {
                return "Contact information cannot be blank!"
            }
            else {
                return false;
            }
        }

        function ContactEditEsc(span) {

            var id = span.attr("data-id");
            var value = span.attr("data-prev");
            var field = span.attr("data-field");
            var display = span.attr("data-prev") == "" ? ContactEditPlaceholder(field) : span.attr("data-prev");

            var view = $("<span data-id='" + id + "' data-field='" + field + "' data-prev='" + value + "'>");
            view.html(display);
            span.replaceWith(view);
            view.click(ContactEditSpanClicked);
        }

        function UpdateCustomerContactField(id, field, value) {
            $.ajax({
                type: "POST",
                url: appRoot + "customer/UpdateCustomerContactField",
                data: { "CustomerContactId": id, field: field, value: value },
            })
            .success(function() {
                if (field == "First" || field == "Last") {
                    ReloadContactCards();  // Reload the cards if the sort order may have changed. Otherwise, it isn't really necessary.
                }
            })
            .error(function(jqXHR, textStatus, errorThrown) {
                alert("ERROR: " + UpdateCustomerContactField + " jqXHR: " + jqXHR + " textStatus: " + textStatus + " errorThrown: " + errorThrown);
            });
        }

        function UpdateContactInfoField(id, field, value) {
            $.ajax({
                type: "POST",
                url: appRoot + "customer/UpdateContactInfoField",
                data: { "ContactInfoId": id, field: field, value: value },
            })
            .error(function (jqXHR, textStatus, errorThrown) {
                alert("ERROR: " + UpdateCustomerContactField + " jqXHR: " + jqXHR + " textStatus: " + textStatus + " errorThrown: " + errorThrown);
            });
        }

        function ContactInfoAddClick(customerContactId) {
            var modal = $('#contactInfoModal');
            modal.find('#CustomerContactId').val(customerContactId);
            modal.modal();
        }

        function ContactInfoDeleteClick(contactInfoId, info) {

            $("#deleteContactConfirmTitle").html("Really delete <strong>" + info + "</strong>?");

            $("#deleteContactConfirmYes").off('click').click(function() {
                DeleteContactInfo(contactInfoId);
            });

            $("#deleteContactConfirmNo").off('click').click(function() {
                $("#deleteContactConfirm").modal("hide");
            });

            $("#deleteContactConfirm").modal("show");
        }

        function DeleteContactInfo(contactInfoId) {

            $.ajax({
                type: "POST",
                url: appRoot + "customer/DeleteContactInfo",
                data: { "ContactInfoId": contactInfoId },
            })
            .success(function() {
                $("#contactInfo" + contactInfoId).remove();
                $("#deleteContactConfirm").modal("hide");
            });
        }

        function ContactEditPlaceholder(field) {

            var placeholder;

            switch (field) {
                case "First":
                    placeholder = "First";  // This should never occur because validation should stop it first.
                    break;
                case "Last":
                    placeholder = "Last";  // This should never occur because validation should stop it first.
                    break;
                case "JobTitle":
                    placeholder = "Title";
                    break;
                case "Notes":
                    placeholder = "Notes";
                    break;
                case "Name":
                    placeholder = "Label";
                    break;
                case "Contact":
                    placeholder = "Contact";
                    break;
                default:
                    placeholder = "Add";  // Shouldn't happen.
            }

            return "&lt;" + placeholder + "&gt;";
        }

        function ContactMessageDialog(message) {

            $("#contactMessageDialogMessage").html(message);

            $("#contactMessageDialogOk").off('click').click(function () {
                $("#contactMessageDialog").modal("hide");
            });

            $("#contactMessageDialog").modal("show");
        }

        function ContactInfoSetAsPrimary(customerContactId, contactInfoId, isPrimary) {
            if (!isPrimary) {
                $.ajax({
                    type: "POST",
                    url: appRoot + "customer/SetPrimaryContact",
                    data: { "customerContactId": customerContactId, "contactInfoId": contactInfoId },
                })
                .success(function() {
                    ReloadContactCards();
                });
            }
        }

        // *** END CUSTOMER CONTACTS ***

    </script>
}